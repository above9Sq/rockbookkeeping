---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-opacity ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default py-3 px-3 md:px-6 mx-auto w-full',
      { 'md:flex md:justify-between': position !== 'center' },
      { 'md:grid md:grid-cols-3 md:items-center': position === 'center' },
      { 'max-w-7xl': !isFullWidth },
    ]}
  >
    <!-- Left: logo + mobile menu toggle -->
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex items-center md:hidden">
        <ToggleMenu />
      </div>
    </div>

    <!-- Center: links -->
    <nav
      class="hidden w-full items-center overflow-y-auto overflow-x-hidden text-default md:mx-5 md:flex md:w-auto md:justify-self-center md:overflow-x-auto md:overflow-y-visible"
      aria-label="Main navigation"
    >
      <ul
        class="flex w-full flex-col text-xl font-medium tracking-[0.01rem] md:w-auto md:flex-row md:justify-center md:self-center md:text-[0.9375rem]"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ?
                <>
                  <button
                    type="button"
                    class="hover:text-link flex items-center whitespace-nowrap px-4 py-3 dark:hover:text-white"
                  >
                    {text}{' '}
                    <Icon name="tabler:chevron-down" class="ml-0.5 hidden h-3.5 w-3.5 md:inline rtl:ml-0 rtl:mr-0.5" />
                  </button>
                  <ul class="dropdown-menu dark:md:bg-dark rounded-sm pl-4 font-medium drop-shadow-xl md:absolute md:hidden md:min-w-[200px] md:bg-white/90 md:pl-0 md:backdrop-blur-md">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              : <a
                  class:list={[
                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              }
            </li>
          ))
        }

        <!-- Mobile-only: put Contact as a normal text item at the end -->
        {
          actions?.length ?
            <li class="md:hidden">
              {actions.map((btn) => (
                <a
                  href={btn.href}
                  class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap"
                >
                  {btn.text}
                </a>
              ))}
            </li>
          : null
        }
      </ul>
    </nav>

    <!-- Right: actions (desktop only) -->
    <div
      class={`hidden md:flex md:self-center items-center md:mb-0 md:w-auto md:static md:justify-self-end ${
        position === 'left' ? 'ml-auto rtl:ml-0 rtl:mr-auto' : ''
      }`}
    >
      <div class="hidden md:flex w-full items-center justify-between md:w-auto">
        <div class="hidden md:flex">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          {
            showRssFeed && (
              <a
                class="inline-flex items-center rounded-lg p-2.5 text-sm text-muted hover:bg-gray-100 focus:outline-hidden focus:ring-4 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-700"
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              >
                <Icon name="tabler:rss" class="h-5 w-5" />
              </a>
            )
          }
        </div>

        {
          actions?.length ?
            <span class="hidden md:inline-flex ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="px-5.5 ml-2 w-auto py-2.5 text-sm font-semibold shadow-none md:px-6" />
              ))}
            </span>
          : null
        }
      </div>
    </div>
  </div>
</header>
