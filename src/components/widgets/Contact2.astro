---
import FormContainer from '~/components/ui/Form.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid2 from '~/components/ui/ItemGrid2.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  inputs,
  textarea,
  disclaimer,
  button,
  description,
  items = [],  
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />



  {
    inputs && (
      <div class="flex flex-row max-w-xl mx-auto rounded-lg backdrop-blur-sm border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900 shadow-sm p-4 sm:p-6 lg:p-8 w-full">
        <FormContainer
          inputs={inputs}
          textarea={textarea}
          disclaimer={disclaimer}
          button={button}
          description={description}
        />
            <ItemGrid2
        items={items}
        columns={1}
        
        classes={{
        container: 'gap-4 md:gap-6 mx-auto',
        panel:
            'rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur-sm border border-[#ffffff29] bg-white dark:bg-slate-900 p-6',
        // panel:
        //   "text-center bg-page items-center md:text-left md:rtl:text-right md:items-start p-6 p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-800",
        icon: 'w-12 h-12 mb-6 text-primary',
        ...((classes?.items as Record<string, never>) ?? {}),
        }}
    />
        
      </div>
    )
  }
</WidgetWrapper>
